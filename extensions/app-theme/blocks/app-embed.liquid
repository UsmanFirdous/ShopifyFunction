

<script>
//Identify cart item change
const listenToCartChange = function (ns, fetch) {
    if (typeof fetch !== "function") return;
    ns.fetch = function () {
      const response = fetch.apply(this, arguments);
      response.then((res) => {
       
        const isCartChanging =
          /\/cart\/add|\/cart\/update|\/cart\/change|\/cart\/clear|\/cart\/add.js|\/cart\/update.js|\/cart\/change.js|\/cart\/clear.js/.test(
            res.url.toString()
          );
        if (isCartChanging) {
          setTimeout(()=>{changeCartPrice(true);} , 500)
        }
      });
      return response;
    };
};
</script>

<script>
let xy=[];
//Code for adding discount table on product page
{% assign variant = product.selected_or_first_available_variant %}
console.log("Variant1", `{{ variant.price | divided_by: 100.00 }}`);
{%- assign rules = variant.metafields.volume-discount.function-configuration.value -%}
console.log("Rules12", `{{ rules }}`)
let x={{ variant.price | divided_by: 100.00 }};
{%- for rule in rules -%}
       
    {% if rule.discount_type == "F" %}
      x={{ variant.price | divided_by: 100.00 }} - {{ rule.discount_value }};
      xy[0]=x.toFixed(2);
    {% endif %}
    {% if rule.discount_type == "P" %}
      x={{ variant.price | divided_by: 100.00 }} - ({{ variant.price | divided_by: 100.00 }}*{{ rule.discount_value }})/100;
      xy[1]=x.toFixed(2);
    {% endif %}
    {% if rule.discount_type == "R" %}
      x={{ rule.discount_value }}
      xy[2]=x.toFixed(2);
    {% endif %}
    
{%- endfor -%}

{% capture currencyString %}
  {{ shop.money_format }}
{% endcapture %}
{% assign tempArray = currencyString | split: '{' %}
{% assign currencySymbol = tempArray.first %}

function addTable(){
  let v=0;
  let x=`<div id="table-div">
  <p id="custom-txt">Buy More, Save More!</p>
  <table class="cus-table border-cus">
    <thead bgcolor="#E0E4FF">
      <tr class="border-cus">
        <th class="cus-table cus-pad">Quantities</th>
        <th class="cus-table cus-pad">Price Per Unit</th>
      </tr>
    </thead>
    <tbody>
      {%- for rule in rules -%}
        <tr class="cus-table-row border-cus"">
          <td class="cus-table cus-pad">{{ rule.quantity }}+</td>
          <td class="cus-table cus-pad">
            {% if rule.discount_type == "F" %}
              {{ currencySymbol }}${xy[0]}
            {% endif %}
            {% if rule.discount_type == "P" %}
                {{ currencySymbol }}${xy[1]}
            {% endif %}
            {% if rule.discount_type == "R" %}
              {{ currencySymbol }}${xy[2]}
            {% endif %}
          </td>
        </tr>
      {%- endfor -%}
    </tbody>
  </table>
  <p id="cus-seemore"><a href="" id="cus-link">See More</a></p>
  </div>`
  var div5 = document.createElement("div");
  div5.innerHTML = x.trim();
  return div5.firstChild;
}

{% if rules.size>0 %}
  let tab1=addTable();
  const productdes=document.querySelectorAll('.product__description')[0];

  productdes.insertBefore(tab1, productdes.firstChild);

  document.getElementById("table-div").style.width="fit-content";
  document.getElementById("table-div").style.color="#081E57";
  document.getElementById("table-div").style.fontSize="14px";
  document.getElementById("custom-txt").style.fontWeight="600";
  document.getElementById("custom-txt").style.fontSize="14px";
  document.getElementById("cus-seemore").style.textAlign="center";
  document.getElementById("cus-link").style.color="#4765F0";
  document.getElementById("cus-link").style.fontSize="13px";
  
  let rows=document.querySelectorAll('.cus-table-row');
  for(let q=0;q<rows.length;q++)
  {
    if(q%2==0) rows[q].style.backgroundColor="#F6F6F6";
    else rows[q].style.backgroundColor="#FFFFFF"
  }

  let brdr=document.querySelectorAll(".cus-table");

  for(let q=0;q<brdr.length;q++)
  {
    brdr[q].style.border="none";
    brdr[q].style.borderCollapse = "collapse";
  }

  let brdr1=document.querySelectorAll(".border-cus");

  for(let q=0;q<brdr1.length;q++)
  {
    brdr1[q].style.border="1px solid #CED4DA";
  }


  let pad=document.querySelectorAll(".cus-pad");

  for(let q=0;q<pad.length;q++)
  {
    pad[q].style.padding="10px 120px 10px 20px";
  }

{% endif %}
</script>

<script>

  //Adding rules and line prices here

    const rules = [];
    const actualLinePrices = [];
    {% for item in cart.items %}
    {% if item.variant.metafields.volume-discount.function-configuration %}
    rules[{{ item.id }}] = JSON.parse(JSON.stringify({{ item.variant.metafields.volume-discount.function-configuration }}));
    actualLinePrices[{{ item.id }}] = {{ item.price }};
    {% endif %}
    {% endfor %}

</script>



<script>
let cartData1;
 async function changeCartPrice(bol){

    const price = [];
    const variants=[];
    let x=0;

    await fetch("/cart.js", {
    method: "GET",
    headers: {
      Accept: "application/json",
      "Content-Type": "application/json",
    },
  })
    .then((res) => {
      return res.json();
    })
    .then(async (cartData) => {
      //console.log("Cart Data",cartData.items);

      //console.log("CartData1", cartData1);

      if(!cartData1) cartData1=cartData;
      else {
        //console.log("Length of cart", cartData1.items.length, cartData.items.length)
        if(cartData1.items.length!=cartData.items.length){
          if(bol && location.href.includes("/cart")==false) {
            if(document.querySelectorAll(".cart-item").length) location.reload();
          }
        }
      }
      
      let y=cartData.items;

      for(let x=0;x<cartData.items.length;x++){
        price[y[x].variant_id]=y[x].final_price;
        variants[x]=y[x].variant_id;
      }


    });

    if(document.querySelectorAll(".cart-item").length!=variants.length && location.href.includes("/cart")) { console.log("Return"); return; }

    let cart_item=0,q=0,s1=0;
    let checkElement= document.querySelectorAll('.cart-item__totals');
    let price_wrappper=document.getElementsByClassName("cart-item__price-wrapper");
    let itemTotal=document.getElementsByClassName("cart-item__totals");

    //console.log("Length of itemTotal and Price", itemTotal.length, variants.length);
    
    cart_item=checkElement.length/variants.length;
    price_wrappper=price_wrappper.length/variants.length;
    itemTotal=itemTotal.length/variants.length;

    //console.log("Item Total", itemTotal);

    for(let j=0;j<variants.length;j++){
      let quanitityInput=variants[j];
      //console.log("quanitityInput", quanitityInput);

      //console.log("Rule & Price", rules[quanitityInput],price[quanitityInput]);

      // calculate discount based on the rules.
      if(rules[quanitityInput])
      {
        let quantity1=document.querySelectorAll('.quantity__input');
        quantity1=quantity1[j]?.getAttribute('value');
        rules[quanitityInput].sort((a, b) => b.quantity - a.quantity);
        //console.log("Rules After sorting123",rules[quanitityInput]);
        let x=rules[quanitityInput];

        originalPrice=price[quanitityInput]/100;
        originalPrice=originalPrice*quantity1;
       
        //console.log("original Price", originalPrice);

        {% capture currencyString %}{{ shop.money_format }}{% endcapture %}
        {% assign tempArray = currencyString | split: '{' %}
        {% assign currencySymbol = tempArray.first %}
        let symbol=`{{ currencySymbol }}`;

        let flag=0;

        
        for(let i=0;i<x.length;i++)
        {
          if(quantity1>=x[i].quantity)
          {
            flag=1;
            let discountPrice=x[i].discount_value;
            //console.log("Discount Price", discountPrice);

            function removeAllChildNodes(parent) {
                while (parent.firstChild) {
                    parent.removeChild(parent.firstChild);
                }
            }

            for(let r=0;r<cart_item;r++)
            {
              //console.log("Remove Item", r, q);
              let test=document.querySelectorAll('.cart-item__totals')[q];
              removeAllChildNodes(test);
              q++;
            }
           
            let p=originalPrice;

            if(x[i].discount_type== 'F') discountPrice=p-discountPrice;
            else if(x[i].discount_type== 'P') discountPrice=p-((p*x[i].discount_value)/100);
            else {
              discountPrice=(quantity1*discountPrice);
            }

            if(p-discountPrice>x[i].discount_max_value && x[i].discount_max_value!=0) discountPrice=p-x[i].discount_max_value;
            
            //console.log("Final Priceeeeeee", discountPrice,s1);

            discountPrice=discountPrice.toFixed(2);

            {% assign currency2 = cart.currency.symbol %}
            let cur2=`{{ currency2 }}`;

            if(cur2!=symbol) symbol=symbol+" ";

            discountPrice=symbol + discountPrice;

            originalPrice=originalPrice.toFixed(2);
            originalPrice=symbol + originalPrice;

            for(let r=0;r<itemTotal;r++)
            {
              let span2=document.createElement("DEL");
              span2.innerText = originalPrice;

              let break1=document.createElement("br")
              
              let span1=document.createElement("span");
              span1.innerText = discountPrice;

              let span3=document.createElement("span");
              span3.appendChild(span2);
              span3.appendChild(break1);
              span3.appendChild(span1);
              span3.classList.add("price");
              span3.classList.add("price--end");

              let div2=document.createElement("div");
              div2.appendChild(span3);
              div2.classList.add("cart-item__price-wrapper");

              let target1=document.getElementsByClassName("cart-item__totals")[s1];
              //target1.classList.remove("small-hide");
              target1.appendChild(div2);
              s1++;
            }

            break;
          } 
        }
        if(flag==0){
          q+=cart_item;
          s1+=itemTotal;
        }
      }
      else{
        q+=cart_item;
        s1+=itemTotal;
      }

      // strikeout the original price.
      // append the new price in front of striked out price.
      }
 }
 listenToCartChange(window, window.fetch);
  window.onload = () => {
    changeCartPrice(false);
  }
</script>

<div class='bsr_countdown' id="bsr_countdown"></div>
<script> var bsrCurrentVariant = {{ product.selected_or_first_available_variant| json }}; window.bsr_clock_design = {{ shop.metafields.bevy_sclock_design.design}}; {% assign key = 'key' %} var bsrMetafield; var bsrAllMetafields = []; {% for i in (0..50) %} {% assign str = key | append: i %} {% if shop.metafields.bevy_sclock[str] != blank %} bsrMetafield = "{{ shop.metafields.bevy_sclock[str]}}"; bsrAllMetafields.push(bsrMetafield); {% endif %} {% endfor %} </script>
<script>window.bsr_sales_clock_data="",window.bsr_product="",window.bsr_clock_position={top_on_product_div:"bsr_countdown",top_of_cart_div:"bsr_countdown_cart",bottom_of_cart_div:"bsr_countdown_cart"},window.bsr_clock_design=window.bsr_clock_design?.design,window.clock_current_pos=window.bsr_clock_design?.clockPosition,window.activated_store_wide="",window.bsr_month=["January","February","March","April","May","June","July","August","September","October","November","December"],window.bsr_day=["Sunday","Monday","Tuesday","Wednesday","Thursdays","Friday","Saturday"];var bsrLastUrl=location.href;const getCorrectDayHourMinuteSecondsString=(e=0)=>{let t=e/60,r=t/60,n=r/24;return Math.floor(n)>0?Math.floor(n)+" "+bsrNounDay(Math.floor(n)):Math.floor(r)>0?Math.floor(r)+" "+bsrNounHours(Math.floor(r)):Math.floor(t)>0?Math.floor(t)+" "+bsrNounMinutes(Math.floor(t)):Math.floor(e)>0?Math.floor(e)+" "+bsrNounSecond(Math.floor(e)):"0 second"};function bsrReady(e){"complete"===document.readyState||"interactive"===document.readyState?setTimeout(e,1):document.addEventListener("DOMContentLoaded",e)}function getCurrentVariantId(){let e=Object.fromEntries(new URLSearchParams(window.location.search).entries());return void 0!==e.variant&&(window.bsr_current_variant_id=e.variant),bsrCurrentVariant&&(window.bsr_current_variant_id=bsrCurrentVariant.id,bsrCurrentVariant=null),window.bsr_current_variant_id}async function getClockData(){let e=[];console.log("bsrAllMetaFields",bsrAllMetafields),bsrAllMetafields.length>0&&bsrAllMetafields.forEach(t=>{t?.split("&&&").forEach(t=>{let r=t?.split(","),n=r.shift(),o=r.shift(),s=r.shift();e.push({value:r,start_date:o,end_date:s,time_zone:n})})});let t={design:window.bsr_clock_design,storewide:e};return window.bsr_sales_clock_data=t,t}function bsrContainer(){return'<div id="bsr_parent_container" style=\'font-size:100px\'> <div id="bsr_container"> </div> </div>'}function bsrGetDesignValue(e){return""==e||void 0===e?"inherit":e}function bsrInjectFontFamily(e){let t=document.createElement("link");t.rel="stylesheet";let r="";switch(e){case"Roboto":r="https://fonts.googleapis.com/css2?family=Roboto&display=swap";break;case"Lato":r="https://fonts.googleapis.com/css2?family=Lato&display=swap";break;case"Montserrat":r="https://fonts.googleapis.com/css2?family=Montserrat&display=swap";break;case"Roboto Slab":r="https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap";break;case"Open Sans":r="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap"}""!==r&&(t.href=r,document.head.append(t))}function bsrDesighSalesClock(){let e=document.getElementById("bsr_parent_container");if(e){document.getElementById("bsr_container");let t=window.bsr_sales_clock_data?.design?.clockStyle,r=bsrGetDesignValue(t.fontSize)+"px",n=bsrGetDesignValue(t.margin)+"px",o=bsrGetDesignValue(t.padding)+"px",s=bsrGetDesignValue(t.textAlign),a=bsrGetDesignValue(t.borderColor),i=bsrGetDesignValue(t.backgroundColor),l=bsrGetDesignValue(t.color),c=bsrGetDesignValue(t.fontWeight),d=bsrGetDesignValue(t.fontFamily);bsrInjectFontFamily(t.fontFamily),"top_of_cart_div"==window.clock_current_pos&&0==t.margin?e.setAttribute("style",`font-size:${r};color:${l};font-family:${d};
    border:1px solid ${a};background:${i};font-weight:${c};
margin:${n}; padding:${o}; text-align:${s};width:calc(100%-${2*t.margin});margin-bottom:10px;`):e.setAttribute("style",`font-size:${r};color:${l};font-family:${d};
    border:1px solid ${a};background:${i};font-weight:${c};
margin:${n}; padding:${o}; text-align:${s};width:calc(100%-${2*t.margin});`)}else console.log("could not found parant node")}function bsrPlaceSalesClock(){let e=document.getElementById("bsr_parent_container"),t=bsrContainer();e&&e.remove();let r=document.getElementsByClassName("bevy_sales_clock");if(r&&r.length>0)Array.from(r).forEach(e=>{let t=bsrContainer(),r=document.createElement("div");r.id="bsr_countdown_cart",r.class="bsr_countdown_cart",r.innerHTML=t,e.prepend(r)});else if("top_of_cart_div"==window.clock_current_pos||"top_on_product_div"==window.clock_current_pos){r=document.querySelectorAll("button[type=submit]");let n;for(var o=0;o<r.length;o++)if((n=(n=(n=r[o].textContent||r[o].innerText).trim().toString()).toLowerCase()).includes("add to cart")){n=r[o];break}let s=document.querySelector(".product-single__title")||document.querySelector(".product__title.cust-sm-hide")||document.querySelector(".product__title")||document.querySelector('h1[itemprop="name"]'),a=document.createElement("div");a.id="bsr_countdown_cart";let i=s&&s.parentElement;"top_of_cart_div"==window.clock_current_pos?n.parentNode.insertBefore(a,n):i?i.prepend(a,i.firstChild):s?s.prepend(a):console.log("No point found to add Store Wide Sale Clock"),document.getElementById("bsr_countdown_cart").innerHTML=t}}async function bsrSalesClockStart(){await getClockData(),await getCurrentVariantId(),bsrDrawClock()}function bsrDetermineVisibility(){if(!window.bsr_clock_design.clockToggle)return!1;let e=getCurrentVariantId();for(let t=0;t<window.bsr_sales_clock_data.storewide.length;t++)if(window.bsr_sales_clock_data.storewide[t].value.toString().includes(e))return window.activated_store_wide=window.bsr_sales_clock_data.storewide[t],!0;return!1}function formatAMPM(e){let t=e.getHours(),r=e.getMinutes(),n=e.getSeconds();0==n&&(n="00");let o=t>=12?"PM":"AM";return t%=12,(t=t||12)+":"+(r=r<10?"0"+r:r)+":"+n+" "+o}function bsrNounHours(e){return e>1?" hours":" hour"}function bsrNounMinutes(e){return e>1?" minutes":" minute"}function bsrNounSecond(e){return e>1?" seconds":" second"}function bsrNounDay(e){return e>1?" days":" day"}function bsrPutContent(){let e=bsrGetTimeDifferenceInSec(),t=window.bsr_sales_clock_data?.design.clockType,r=new Date(window.bsr_sales_end_data_string),n=window.bsr_month[r.getMonth()],o=window.bsr_day[r.getDay()],s=(e%60).toFixed(0),a=Math.floor(e/60),i=0,l=0,c=0;s>59&&(a=Math.floor(s/60)),a>59&&(i=Math.floor(a/60),a%=60),l=Math.floor(i/24),c=(i%24).toFixed(0),a<10&&(a="0"+a),s<10&&(s="0"+s),s>59&&(s="00");let d;"0"==t?d=`Sale ends in ${l}${bsrNounDay(l)} ${c}${bsrNounHours(c)} ${a}${bsrNounMinutes(a)} ${s}${bsrNounSecond(s)}  `:"1"==t?d=`Sale ends in ${getCorrectDayHourMinuteSecondsString(e)} `:"2"==t?d=`On Sale until ${o}, ${n} ${r.getDate()}, ${r.getFullYear()}, ${formatAMPM(r)} `:"3"==t?d=`On Sale until ${o}, ${n} ${r.getDate()}, ${r.getFullYear()}`:"4"==t?d=`On Sale until ${n.substring(0,3)} ${r.getDate()}, ${r.getFullYear()}, ${formatAMPM(r)} `:"5"==t?d=`On Sale until ${n.substring(0,3)} ${r.getDate()}, ${r.getFullYear()} `:"6"==t?d=`Sale ends in ${i}:${a}:${s}`:"7"==t?d=`Deal ends in ${l}d:${c}h:${a}m:${s}s `:"8"==t&&(d=`Sale ends in ${i}${bsrNounHours(i)} ${a}${bsrNounMinutes(a)} ${s}${bsrNounSecond(s)}`);let u=document.getElementById("bsr_container");u?u.innerHTML=d:console.log("cantainer not found")}function bsrDrawClock(){let e=bsrDetermineVisibility(),t=bsrGetTimeDifferenceInSec();if(!e){let r=document.getElementById("bsr_parent_container");return r&&r.remove(),""}t>0&&(bsrPlaceSalesClock(),bsrDesighSalesClock(),bsrPutContent(),setInterval(()=>{if((t=bsrGetTimeDifferenceInSec())>0)bsrPutContent();else{let e=document.getElementById("bsr_parent_container");return e&&e.remove(),""}},1e3))}function bsrGetEndTime(){let e=window.activated_store_wide.end_date;if(!e)return null;{let t=e?.split("T"),r=t[0].replaceAll("-","/"),n=t[1]?.split(".")[0],o,s=Intl.DateTimeFormat("en-GB",{timeZone:window.activated_store_wide.time_zone,timeZoneName:"short"}).format(new Date)?.split(",")[1]?.split("GMT")[1];return new Date(r+" "+n+" GMT"+s)}}function bsrGetTimeDifferenceInSec(){let e=bsrGetEndTime(),t=new Date,r;return r=e?e-t:t,window.bsr_remaining_sec=r/1e3,e&&(window.bsr_sales_end_data_string=e.toString()),window.bsr_remaining_sec}function onUrlChange(){bsrDrawClock()}bsrReady(async function(){bsrSalesClockStart()}),new MutationObserver(()=>{let e=location.href;e!==bsrLastUrl&&(bsrLastUrl=e,onUrlChange())}).observe(document,{subtree:!0,childList:!0});</script>


{% schema %}
  {
    "name": "Bevy Sales Rules",
    "target": "body",
    "settings": []
  }
{% endschema %}
